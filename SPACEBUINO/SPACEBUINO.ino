/*
  SPACEBUINO.ino

  Copyright 2019 Laurent Meurillon <gamelysandre@gmail.com>

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  MA 02110-1301, USA.


*/
#include <Gamebuino-Meta.h>
#include "Game.h"
#include "Menu.h"
#include "HighScore.h"
#include "Space.h"
#include "Level.h"

const uint16_t LOGO_Data[] =
{
  33, 25,
  1,
  0,
  0xF81F,
  0,
  // 1      2       3       4       5       6       7        8      9       10      11      12      13      14      15      16      17      18      19      20      21      22      23      24      25      26      27      28      29      30      31      32      33
  0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0,
  0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0,
  0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0,
  0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xF81F, 0xffa0,
  0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0,
  0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xF81F, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0, 0xffa0
};

Image IMG_LOGO = Image(LOGO_Data);

unsigned long TimeGame;
int Mode = -1;
int Music = -1;
bool isPlaying = false;

void playMusic();
void stopMusic();

Game *SpaceBuino;
Menu *MainMenu;
HS *HighScore;
Level *LevelMenu;
Space StarLogo;

const char *MainMenuText[] =
{
  "PLAY",
  "LEVEL",
  "HIGH SCORES",
  "CREDITS"
};

void setup()
{
  // initialize the Gamebuino object
  gb.begin();
  gb.sound.playOK();
  SpaceBuino = new Game;
  MainMenu = new Menu(MainMenuText, 4);
  HighScore = new HS();
  LevelMenu = new Level();

}


void loop()
{
  TimeGame = millis();
  gb.waitForUpdate();
  gb.display.clear();

  switch (Mode)
  {
    case -1:
      // play sound
      if (!isPlaying)
      {
        playMusic();
      }
      MainMenu->DisplayMenu(TimeGame);
      Mode = MainMenu->Mode();
      // Save Mode High Scores
      HighScore->Mode(Mode);
      SpaceBuino->Reset();
      break;
    case 0:
      if (SpaceBuino->GameOver())
      {
        if (!isPlaying)
        {
          playMusic();
        }
        HighScore->Display(TimeGame, SpaceBuino->PlayerScore());
        Mode = HighScore->Mode();
        // reset Mode main menu
        MainMenu->Mode(-1);
      }
      else
      {
        if (isPlaying)
        {
          stopMusic();
        }
        if (SpaceBuino->Play())
        {
          SpaceBuino->Start(TimeGame);
        }
        else
        {
          SpaceBuino->HomepageLevel();
        }
      }
      break;
    case 1:
      LevelMenu->Display(TimeGame);
      break;
    case 2:
      HighScore->Display(TimeGame, 0);
      Mode = HighScore->Mode();
      // reset Mode main menu
      MainMenu->Mode(-1);
      break;
    case 3:
      StarLogo.Display();
      gb.lights.clear();
      gb.display.drawImage(20, 0, IMG_LOGO);
      gb.display.setColor(154, 205, 50);
      gb.display.setCursor(8, 30);
      gb.display.println("CODE et GRAPHISME");
      gb.display.setCursor(15, 40);
      gb.display.println("- LYSANDRE -");
      gb.display.setCursor(0, 50);
      gb.display.println("gamelysandre@gmail.com");
      if (gb.buttons.pressed(BUTTON_A))
      {
        Mode = -1;
        MainMenu->Mode(-1);
      }
      break;
  }
}
void playMusic()
{
  Music = gb.sound.play("Space.WAV", true);
  isPlaying = true;
}
void stopMusic()
{
  gb.sound.stop(Music);
  isPlaying = false;
}
